
\[Alpha] = Rationalize[0.75];
R0 = 1/(1 - \[Alpha]);
simpoints = 200;
simsize = 10*R0;

Print["Don't forget to set values, or else things won't work!"];
Print["alpha="<>ToString[N[\[Alpha],2]]<>", simpoints="<>ToString[simpoints]<>", size="<>ToString[simsize/R0]<>"*R0"];
V[\[Phi]_, \[Alpha]_] := \[Phi]^2/2 + \[Phi]^3/2 + \[Alpha] \[Phi]^4/8;
SetParams[] := (
   size = 500;
   xmin = 10^-100; xmax =  2*simsize; \[Delta]x = (xmax - xmin)/size;
   xgrid = Table[x, {x, xmax, xmin, -\[Delta]x}];
   
   revstep = \[Phi]m /. 
     Solve[(\[Phi]p + \[Phi]m - 2 \[Phi])/\[Delta]x^2 + 
         3/\[Rho] (\[Phi]p - \[Phi]m)/(2 \[Delta]x) - 
         D[V[\[Phi], \[Alpha]], \[Phi]] == 0, \[Phi]m][[1]];
   fevstep = \[Phi]p /. 
     Solve[(\[Phi]p + \[Phi]m - 2 \[Phi])/\[Delta]x^2 + 
         3/\[Rho] (\[Phi]p - \[Phi]m)/(2 \[Delta]x) - 
         D[V[\[Phi], \[Alpha]], \[Phi]] == 0, \[Phi]p][[1]];
   RGetSolution[\[Delta]_] := (
     \[Phi]sol = SetPrecision[{0, \[Delta]}, precision];
     Do[
      If[Abs[\[Phi]sol[[-1]]] > 10^10, 0;, AppendTo[
         \[Phi]sol,
         N[(revstep /. {\[Phi] -> \[Phi]sol[[-1]], \[Phi]p -> \
\[Phi]sol[[-2]], \[Rho] -> xgrid[[i]]}), precision]
         ]
        ];, {i, Length[xgrid] - 1}
      ];
     Return[\[Phi]sol];
     );
     );
GetSol[] := (
   precision = 800;
   tol = 10^-250;
   maxiter = 1000; iter = 0;
   \[Delta]min = 0;
   \[Delta]max = -10^-1;
   
   While[Round[\[Delta]max, 10 tol] != Round[\[Delta]min, 10 tol] && 
     iter < maxiter, (
     \[Delta]guess = (\[Delta]max + \[Delta]min)/2;
     (* look at derivative *)
     \[Phi]der = (#[[-2]] - #[[-3]]) &@RGetSolution[\[Delta]guess];
     If[\[Phi]der > 0,
      \[Delta]max = \[Delta]guess;,
      \[Delta]min = \[Delta]guess;
      ];
     iter++;
     )];
   );
SetParams[];
GetSol[];
bubblefn = 
  Interpolation[
   N[Join[{{-xgrid[[1]], \[Phi]sol[[-1]]}}, 
     Transpose[{xgrid[[1 ;; Length[\[Phi]sol] - 1]], \[Phi]sol[[
        2 ;;]]}]]]];
If[simsize > 2 3^(1/2) xmax, Print["simsize is too big!"], (
   b = {-simsize/2, simsize/2, simsize/(simpoints-1)};
   data = Table[{
      Log[0.1], (* energy density *)
      0., 0., 0., (* Initial fluid velocity *)
      bubblefn[Sqrt[x^2 + y^2 + z^2]], (* field  *)
      0. (* field derivative *)
      }, {x, b[[1]], b[[2]], b[[3]]}, {y, b[[1]], b[[2]], b[[3]]}, {z,
       b[[1]], b[[2]], b[[3]]}];
   )];
Export["INITIAL_a-" <> ToString[N[\[Alpha], 2]] <> "_SIZE-" <> 
   ToString[Round[simsize/R0]] <> "R0_POINTS-"<>ToString[simpoints]<>".h5", data];
